@using CaptchaMvc.HtmlHelpers
@model MyWeb.ViewModel.Account.ResetPasswordViewModel
@{
  Layout = "~/Views/Shared/_LayoutAccount.cshtml";
  ViewBag.Title = Resources.PersianResources.ResetPassword;
}
@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form", autocomplate = "off", id = "resetPasswordForm" }))
{
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.Code)
<div class="panel small-panel">
    <header class="panel-heading">
        <i class="fa fa-user append-icon"></i>
        @Resources.PersianResources.ResetPassword
    </header>
    <div class="panel-body">
        <div class="form-group col-md-12">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Email, new { autocomplete = "off", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-12">
            @Html.MathCaptcha("~/Views/Shared/_CaptchaPartial.cshtml")
        </div>
        <div class="form-group col-md-12">
            <button type="button" onclick="AjaxForm.CustomSubmit(this, 'resetPasswordForm')" data-loading-text="@Resources.PersianResources.PleaseWait" class="btn btn-success btn-block">
                @Resources.PersianResources.ResetPassword
            </button>
        </div>
    </div>
</div>
}
@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
}

