@using System.Globalization
@using System.Web.Optimization
@using CaptchaMvc.HtmlHelpers
@{
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
    ViewBag.Title = Resources.PersianResources.EditUser;
}
@model MyWeb.ViewModel.User.EditUserMainPageViewModel

@using (Html.BeginForm("Edit", "Account", FormMethod.Post,
                                new
                                {
                                    enctype = "multipart/form-data",
                                    id = "editForm",
                                    area = "",
                                    @class = "",
                                    role = "form",
                                    autocomplete = "off"
                                }))
{
    @Html.AntiForgeryToken()

    <div class="panel small-panel">
        <header class="panel-heading">
            <i class="fa fa-user append-icon"></i>
            @Resources.PersianResources.EditUser
        </header>
        <div class="panel-body">
            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">
                    @ViewBag.ErrorMessage
                </div>
            }
            @if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success">
                    @ViewBag.SuccessMessage
                </div>
            }
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Email, new { @autocomplete = "off", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.NameForShow, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.NameForShow, new { @autocomplete = "off", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NameForShow, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.BirthDay, new { @class = "control-label" })
                @{
                    var birthDay = "";
                    if (Model.BirthDay != null)
                    {
                        birthDay = Model.BirthDay.Value.ToString("yyyy/MM/dd", new CultureInfo("fa-IR"));
                    }
                }
                @Html.TextBox("BirthDay", birthDay, new { @autocomplete = "off", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.BirthDay, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.PhoneNumber, new { @autocomplete = "off", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.AvatarFileName, new { @class = "control-label" })
                <div class="input-group image-preview" data-original-title="" title="">
                    <input type="text" class="form-control image-preview-filename" disabled="disabled"> <!-- don't give a name === doesn't send on POST/GET -->
                    <span class="input-group-btn">
                        <!-- image-preview-clear button -->
                        <button type="button" class="btn btn-default image-preview-clear" style="display: none;">
                            <span class="fa fa-remove"></span> @Resources.PersianResources.Delete
                        </button>
                        <!-- image-preview-input -->
                        <span class="btn btn-default image-preview-input">
                            <span class="fa fa-folder-open"></span>
                            <span class="image-preview-input-title">
                                @Resources.PersianResources.Browse
                            </span>
                            <input id="AvatarImage" name="AvatarImage" type="file" accept="image/png, image/jpeg, image/gif"> <!-- rename it -->
                        </span>
                    </span>
                </div>

                @*<div class="file-upload-wrapper" data-text="@Html.DisplayNameFor(m => m.AvatarFileName)">
                        @Html.TextBoxFor(m => m.AvatarImage, new {type = "file", accept = "image/*"})
                        @*<input id="AvatarImage" name="AvatarImage" type="file" accept="image/*">
                    </div>*@
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.GooglePlusId, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.GooglePlusId, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.GooglePlusId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(m => m.FaceBookId, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.FaceBookId, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FaceBookId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.Bio, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Bio, new { @class = "form-control", rows = "3" })
                @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-9">
                @Html.MathCaptcha("~/Views/Shared/_CaptchaPartial.cshtml")
            </div>
            <div class="form-group col-md-3">
                <label class="control-label">&nbsp;</label>
                <button type="submit" class="btn btn-success btn-block">@Resources.PersianResources.Edit</button>
            </div>
        </div>
    </div>


}


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        //$(document).on('click', '#close-preview', function () {
        //    $('.image-preview').popover('hide');
        //    // Hover befor close the preview
        //    $('.image-preview').hover(
        //        function () {
        //            $('.image-preview').popover('show');
        //        },
        //        function () {
        //            $('.image-preview').popover('hide');
        //        }
        //    );
        //});

        $(function () {
            // Create the close button
            var closebtn = $('<button/>', {
                type: "button",
                text: 'x',
                id: 'close-preview',
                style: 'font-size: initial;',
            });
            closebtn.attr("class", "close pull-right");
            // Set the popover default content
            $('.image-preview').popover({
                trigger: 'manual',
                html: true,
                //title: $(closebtn)[0].outerHTML,
                content: "There's no image",
                placement: 'bottom'
            });
            // Clear event
            $('.image-preview-clear').click(function () {
                $('.image-preview').attr("data-content", "").popover('hide');
                $('.image-preview-filename').val("");
                $('.image-preview-clear').hide();
                $('.image-preview-input input:file').val("");
                $(".image-preview-input-title").text("@Resources.PersianResources.Browse");
            });
            // Create the preview image
            $(".image-preview-input input:file").change(function () {
                var img = $('<img/>', {
                    id: 'dynamic',
                    width: 250,
                    height: 200
                });
                var file = this.files[0];
                var reader = new FileReader();
                // Set preview image into the popover data-content
                reader.onload = function (e) {
                    $(".image-preview-input-title").text("@Resources.PersianResources.Change");
                    $(".image-preview-clear").show();
                    $(".image-preview-filename").val(file.name);
                    //img.attr('src', e.target.result);
                    //$(".image-preview").attr("data-content",$(img)[0].outerHTML);
                }
                reader.readAsDataURL(file);
            });

            //$(".image-preview-filename").mouseover(function () {
            //    $(".image-preview").popover("show");
            //});

            //$(".image-preview-filename").mouseout(function () {
            //    $(".image-preview").popover("hide");
            //});

        });
    </script>
}


